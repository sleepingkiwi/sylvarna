/** .SylSection
 *  ------------------------------------------------------------------------------------------------
 *  every block of content that shares spacing etc.
**/

.SylSection {
  padding: var(--section-padding) 0;
  position: relative;
  z-index: var(--z-sections);

  /* centralise in vertical space */
  display: flex;
  flex-direction: column;
  justify-content: center;

  &::after {
    content: ' ';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: black;
    z-index: 2;
    opacity: 0.6;
  }
}

.SylSection--back-secondary {
  color: var(--colour-invert);
  background-color: var(--colour-subtler);
}

.SylSection--with-back {
  color: var(--colour-invert);
}

.SylSection--no-back {
  min-height: 0;
  padding: var(--bsu-l) 0;

  &::after {
    content: none;
  }
}

/* on very small screens we collapse the bottom padding for certain sections */
.SylSection--bottom-collapse {
  /* padding-bottom: 0; */
}

/* we don't want them to butt up against image background sections though */
.SylSection--bottom-collapse + .SylSection--with-back {
  margin-top: var(--bsu-l);
}

/*
  we possibly want to collapse the top of leading image sections but only if they follow sections that already have collapsed bottoms!?
*/
/* .SylSection--bottom-collapse + .SylSection--leading-image,
.SylSection--with-back + .SylSection--leading-image {
  padding-top: 0;
} */

@media (--edge-to-edge-ends) {

  .SylSection {
    min-height: 40vh;
    padding-bottom: var(--section-padding);
  }

  .SylSection--no-back {
    min-height: 0;
    padding-bottom: var(--bsu-l);
  }

  /* .SylSection--bottom-collapse + .SylSection--leading-image,
  .SylSection--with-back + .SylSection--leading-image {
    padding-top: var(--section-padding);
  }

  .SylSection--bottom-collapse + .SylSection--leading-image.SylSection--no-back,
  .SylSection--with-back + .SylSection--leading-image.SylSection--no-back {
    padding-top: var(--bsu-l);
  } */

  .SylSection--bottom-collapse + .SylSection--with-back {
    margin-top: 0;
  }
}

/** If our content contains an immediate wrap we disable padding on mobile sizes
 *  ------------------------------------------------------------------------------------------------
**/
.SylSection__content > .Wrap {
  padding-left: 0;
  padding-right: 0;
}

@media (--edge-to-edge-ends) {

  .SylSection__content > .Wrap {
    padding-left: var(--bsu);
    padding-right: var(--bsu);
  }
}


/** This class is for content that's meant to trail the section above.
 *  ------------------------------------------------------------------------------------------------
 *  min-height and padding are dropped...
**/
.SylSection--top-collapse {
  padding-top: 0;
  min-height: 0;
}

.SylSection__content {
  z-index: 3;
  position: relative;
}


/** Column layout
 *  ------------------------------------------------------------------------------------------------
**/
.SylSection__columns {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex-wrap: wrap;
  margin-right: auto;
  margin-left: auto;
  max-width: var(--layout-columns);
  max-width: calc(var(--layout-columns) + calc(var(--bsu) * 2));

  & .SylSection__column {
    flex-basis: 100%;
  }
}

/* extra or collapsed padding for specific columns that should act like stacked content on mobile */
.SylSection__column--right--leading-image,
.u-flows > .SylSection__column--left--bottom-collapse + .SylSection__column--right {
  /* when we are edge to edge we pad above by a little extra... */
  /* we can't set flow space because these may have multiple children... */
  margin-top: var(--bsu-l);
}

/* .u-flows > .SylSection__column--left--bottom-collapse + .SylSection__column--right--leading-image {
  --flow-space: 0;
} */

@media (--edge-to-edge-ends) {

  .SylSection__column--right--leading-image,
  .u-flows > .SylSection__column--left--bottom-collapse + .SylSection__column--right--leading-image {
    --flow-space: var(--bsu);
  }

  .SylSection__column--right--leading-image,
  .u-flows > .SylSection__column--left--bottom-collapse + .SylSection__column--right {
    margin-top: var(--flow-space);
  }
}

@media (--column-break) {

  .SylSection__columns {
    padding-right: var(--bsu);
    padding-left: var(--bsu);

    & .SylSection__column {
      flex-basis: 50%;
    }

    & .SylSection__column--right {
      margin-top: 0;
    }
  }

  .u-flows > .SylSection__column--left--bottom-collapse + .SylSection__column--right {
    margin-top: 0;
  }

  .SylSection__columns--weighted-left {

    & .SylSection__column--left {
      flex-basis: var(--column-heavy);
    }

    & .SylSection__column--right {
      flex-basis: var(--column-light);
    }
  }

  .SylSection__columns--weighted-right {

    & .SylSection__column--left {
      flex-basis: var(--column-light);
    }

    & .SylSection__column--right {
      flex-basis: var(--column-heavy);
    }
  }
}

.SylSection__columns--aligned-top {
  align-items: flex-start;
}

.SylSection__columns--aligned-bottom {
  align-items: flex-end;
}


/** Columns where an image is forced to match content height
 *  ------------------------------------------------------------------------------------------------
 *  only needs to kick in when columns are active
 *  An example of where this happens is for the ArticleLink components
**/

@media (--column-break) {

  .SylSection__columns--image-match-content--left,
  .SylSection__columns--image-match-content--right {
    align-items: stretch;
  }

  .SylSection__columns--image-match-content--left .SylSection__column--left,
  .SylSection__columns--image-match-content--right .SylSection__column--right {
    position: relative;
    overflow: hidden;

    & img {
      height: 100%;
      width: auto;
      position: absolute;
      left: 50%;
      top: 0;
      transform: translateX(-50%);

      @supports (object-fit: cover) {
        left: 0;
        transform: none;
        object-fit: cover;
        width: 100%;
      }
    }

    /*
      if we used a padded image we can disable some of it's functionality
      better just not use one
    */
    & .PaddedImage {
      height: 100%;
      width: 100%;
      position: absolute;
    }

    & .PaddedImage__padder {
      display: none;
    }
  }

  .SylSection__columns--image-match-content--left .SylSection__column--right,
  .SylSection__columns--image-match-content--right .SylSection__column--left {
    padding: var(--section-padding) 0;
  }

  /*
    For article links:
    we use half section-padding for top/bottom padding
    and add slightly more horizontal pad because the image gets bigger
  */
  .CustomContent--articleLink .SylSection__columns--image-match-content--left .SylSection__column--right {
    padding: var(--bsu-xl) 0 var(--bsu-xl) var(--bsu);
  }

  .CustomContent--articleLink .SylSection__columns--image-match-content--right .SylSection__column--left {
    padding: var(--bsu-xl) var(--bsu) var(--bsu-xl) 0;
  }
}
